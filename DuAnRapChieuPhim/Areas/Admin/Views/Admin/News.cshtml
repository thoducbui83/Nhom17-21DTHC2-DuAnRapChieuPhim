@model IPagedList<DuAnRapChieuPhim.Models.Tintuc>
@using PagedList
@using PagedList.Mvc
@{
    ViewBag.Title = "Account";
    Layout = "~/Areas/Admin/Views/Shared/LayoutAdmin.cshtml";
}

<main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg ">
    <!-- Navbar
                </div>

            </div>
        </div>-->
    <nav class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl" id="navbarBlur" data-scroll="true">
        <div class="container-fluid py-1 px-3">
            <div class="collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4" id="navbar">
                <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                    <div class="input-group input-group-outline">
                        <label class="form-label">Type here...</label>
                        <input type="text" class="form-control">
                    </div>
    </nav>
    <!-- End Navbar -->
    <div class="container-fluid py-4">
        @if (TempData["ErrorMessage"] != null)
        {
            <div id="messageContainer" class="alert" style="background-color: #ff9999; color: white; font-weight:400;">
                @TempData["ErrorMessage"]
            </div>
        }

        @if (TempData["SuccessMessage"] != null)
        {
            <div id="messageContainer" class="alert" style="background-color: #71da71; color: white; font-weight: 400;">
                @TempData["SuccessMessage"]
            </div>
        }
        <button type="button" class="btn btn-primary createNewButton" data-toggle="modal" data-target="#addMovieModal">
            Thêm tin tức
        </button>
        <table class="table">
            <tr>
                <th>
                    Chủ đề tin
                </th>
                <th>
                    Ngày bắt đầu
                </th>
                <th>
                    Ngày kết thúc
                </th>
                <th>
                    Mô tả
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                DateTime? date1 = item.Ngaybatdau;
                DateTime? date2 = item.Ngayketthuc;

                string ngaybd, ngaykt;
                if (date1.HasValue && date2.HasValue)
                {
                    ngaybd = date1.Value.ToString("dd/MM/yyyy");
                    ngaykt = date2.Value.ToString("dd/MM/yyyy");

                }
                else
                {
                    ngaybd = "khong co ngay";
                    ngaykt = "khong co ngay";

                }
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Chudetin)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => ngaybd)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => ngaykt)
                    </td>
                    <td>
                        @{
                            // Lấy mô tả từ model
                            string moTa = item.Mota;

                            // Đặt giới hạn chiều dài
                            int maxLength = 50;

                            // Kiểm tra xem mô tả có vượt quá giới hạn không
                            if (!string.IsNullOrEmpty(moTa) && moTa.Length > maxLength)
                            {
                                // Cắt giảm mô tả và thêm dấu '...'
                                moTa = moTa.Substring(0, maxLength) + "...";
                            }

                            // Hiển thị mô tả
                            @Html.Raw(moTa)
                        }
                    </td>
                    <td>
                        <button type="button" class="btn btn-primary edit-button" data-toggle="modal" data-target="#editMovieModal" data-id="@item.Matin">
                            <i style="color:white;" class="fa fa-pen"></i>

                        </button>
                        <button type="button" class="btn btn-danger delete-button" data-toggle="modal" data-target="#deleteConfirmationModal" data-id="@item.Matin">
                            <i style="color:white;" class="fa fa-solid fa-trash"></i>

                        </button>
                    </td>
                </tr>
            }

        </table>
        <div class="pagination justify-content-center">
            <ul class="pagination">
                @if (Model.PageCount > 1)
                {
                    <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("News", new { page = 1, size = ViewBag.SelectedSize })">Đầu</a>
                    </li>
                    <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("News", new { page = Model.PageNumber - 1, size = ViewBag.SelectedSize })">Trước</a>
                    </li>
                    for (int i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="@Url.Action("News", new { page = i, size = ViewBag.SelectedSize })">@i</a>
                        </li>
                    }
                    <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("News", new { page = Model.PageNumber + 1, size = ViewBag.SelectedSize })">Sau</a>
                    </li>
                    <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("News", new { page = Model.PageCount, size = ViewBag.SelectedSize })">Cuối</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</main>
<div class="modal fade" id="addMovieModal" tabindex="-1" role="dialog" aria-labelledby="addMovieModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addMovieModalLabel">Add Account</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Your form goes here -->
                <!-- Add form fields here -->
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myForm", enctype = "multipart/form-data" }))
                {

                    @Html.AntiForgeryToken();
                    <!-- Add form fields here -->
                    <div class="form-group">
                        <label for="Ten" class="control-label">Tên chủ đề</label>
                        <input type="text" id="Ten" name="Ten" class="form-control" required />
                        <span class="text-danger"> <!-- Validation message goes here --> </span>
                    </div>
                    <div class="form-group">
                        <label for="batdau" class="control-label">Ngày bắt đầu</label>
                        <input type="date" id="batdau" name="batdau" class="form-control" required />
                        <span class="text-danger"> <!-- Validation message goes here --> </span>
                    </div>
                    <div class="form-group">
                        <label for="kt" class="control-label">Ngày kết thúc</label>
                        <input type="date" id="kt" name="kt" class="form-control" required />
                        <span class="text-danger"> <!-- Validation message goes here --> </span>
                    </div>
                    <div class="form-group">
                        <label for="mt" class="control-label">Mô tả</label>
                        <input type="text" id="mt" name="mt" class="form-control" required />
                        <span class="text-danger"> <!-- Validation message goes here --> </span>
                    </div>
                    <div class="form-group">
                        <label for="dk" class="control-label">Điều kiện</label>
                        <input type="text" id="dk" name="dk" class="form-control" required />
                        <span class="text-danger"> <!-- Validation message goes here --> </span>
                    </div>
                    <div class="form-group">
                        <label for="time" class="control-label">Thời hạn</label>
                        <input type="text" id="time" name="time" class="form-control" required />
                        <span class="text-danger"> <!-- Validation message goes here --> </span>
                    </div>
                    <div class="form-group">
                        <label for="HinhAnh" class="control-label">Chọn hình ảnh</label>

                        <!-- Sử dụng thẻ <input type="file"> để chọn hình ảnh -->
                        <input type="file" id="HinhAnh" name="HinhAnh" accept="image/*" class="form-control-file" />

                        <span class="text-danger"><!-- Validation message for Hình ảnh goes here --></span>
                    </div>


                    <!-- Add other form fields as needed -->

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary huy-button" data-dismiss="modal">Close</button>
                        <button id="saveChangesButton" type="submit" class="btn btn-primary">Save changes</button>
                        <button id="ThemButton" type="submit" class="btn btn-primary add-doan">Lưu</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Xác nhận xóa tin này</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Bạn có chắc muốn xóa tin này ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary huy-button" data-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Chắc chắn</button>

            </div>
        </div>
    </div>
</div>
<input type="hidden" id="selectedItemId" />
<script>
    function resetModalState() {
        $("#Ten,#batdau,#kt,#mt,#dk,#time,#HinhAnh, #addMovieModalLabel").val("");
        $("#saveChangesButton, #ThemButton").show();
        $("#Ten,#batdau,#kt,#mt,#dk,#time,#HinhAnh").prop("disabled", false);
    }
    $(document).ready(function () {


        $(".createNewButton").click(function () {
            resetModalState();
            $("#addMovieModalLabel").val("Thêm");
            $("#saveChangesButton").hide();
            $("#addMovieModal").modal("show");
        });
    });
    $(document).ready(function () {
        $(".edit-button").click(function () {
            resetModalState();
            var itemId = $(this).data("id");
            $("#selectedItemId").val(itemId);

            // Gửi yêu cầu Ajax để lấy dữ liệu cho mục đã chọn
            $.ajax({
                url: '/XuLy/Editnew', // Thay thế bằng tên thực của controller và action
                type: 'GET',
                data: { id: itemId },
                success: function (data) {
                    $("#addMovieModalLabel").val("Sửa");
                    // Điền dữ liệu vào các trường trong modal
                    $("#Ten").val(data.tk.Ten);
                    var timestamp = parseInt(data.tk.batdau.substr(6));

                    // Create a new Date object using the timestamp
                    var date1 = new Date(timestamp);

                    // Format the date as desired (e.g., 'YYYY-MM-DD')
                    var formattedDate1= date1.toISOString().split('T')[0];
                    $("#batdau").val(formattedDate1);
                    var timestamp = parseInt(data.tk.kt.substr(6));

                    // Create a new Date object using the timestamp
                    var date2 = new Date(timestamp);

                    // Format the date as desired (e.g., 'YYYY-MM-DD')
                    var formattedDate2 = date2.toISOString().split('T')[0];
                    $("#kt").val(formattedDate2);
                    $("#mt").val(data.tk.mt);
                    $("#dk").val(data.tk.dk);
                    $("#time").val(data.tk.time);
                    $("#ThemButton").hide();
                    // Hiển thị modal
                    $("#addMovieModal").modal("show");
                },
                error: function () {
                    alert("Lỗi khi lấy dữ liệu.");
                }
            });
        });
    });
    $(document).ready(function () {
        $(".details-button").click(function () {
            var itemId = $(this).data("id");
            $("#selectedItemId").val(itemId);

            // Gửi yêu cầu Ajax để lấy dữ liệu cho mục đã chọn
            $.ajax({
                url: '/XuLy/EditAccount', // Thay thế bằng tên thực của controller và action
                type: 'GET',
                data: { id: itemId },
                success: function (data) {
                    $("#addMovieModalLabel").val("Chi tiết");
                    // Điền dữ liệu vào các trường trong modal
                    $("#Ten").val(data.tk.Ten);
                    $("#batdau").val(data.tk.batdau);
                    $("#kt").val(data.tk.kt);
                    $("#mt").val(data.tk.kt);
                    $("#dk").val(data.tk.kt);
                    $("#time").val(data.tk.kt);
                    $("#saveChangesButton").hide();
                    $("#ThemButton").hide();
                    // Tắt khả năng chỉnh sửa các trường dữ liệu
                    $("#UserName, #Password, #ChucDanh, #addMovieModalLabel").prop("disabled", true);
                    // Hiển thị modal
                    $("#addMovieModal").modal("show");
                },
                error: function () {
                    alert("Lỗi khi lấy dữ liệu.");
                }
            });
        });
    });
    $("#confirmDeleteButton").click(function (e) {
        e.preventDefault();
        // Lấy giá trị từ input có id là "selectedItemId"
        var selectedItemId = $("#selectedItemId").val();

        // Kiểm tra xem giá trị có tồn tại không
        if (selectedItemId) {
            // Gọi action trong controller với giá trị selectedItemId
            // Thay đổi đường dẫn và phương thức HTTP tùy thuộc vào ứng dụng của bạn
            $.ajax({
                url: "/XuLy/DLN", // Đường dẫn đến action trong controller
                method: "POST", // Phương thức HTTP (POST, GET, PUT, DELETE, etc.)
                data: { itemId: selectedItemId }, // Dữ liệu gửi đi (nếu cần)
                success: function (response) {
                    // Xử lý khi action thành công
                    console.log("Action thành công", response);
                    window.location.href = "/Admin/Admin/News";
                },
                error: function (error) {
                    // Xử lý khi có lỗi xảy ra
                    console.error("Lỗi khi gọi action", error);
                }
            });
        } else {
            // Thông báo nếu giá trị không tồn tại
            console.warn("Không có giá trị được chọn");
        }
    });
    $(document).ready(function () {
        $("#saveChangesButton").click(function () {
            // Gọi hành động sửa ở đây
            $("#myForm").attr("action", "/XuLy/Editnew");
            $("#myForm").submit();
        });
        function validateInputText(input_id, obj_name) {
            var input_val = $("#" + input_id).val();
            if (!input_val) {
                alert("Vui lòng điền " + obj_name);
                $("#" + input_id).focus();
                return false;
            }
            return true;
        }
        $("#ThemButton").click(function () {
            if (!validateInputText("Ten", "tên chủ đề")) {
                return false;
            };
            if (!validateInputText("batdau", "bắt đầu")) { return false; };
            if (!validateInputText("kt", "kết thúc")) { return false; };
            if (!validateInputText("batdau", "bắt đầu")) { return false; };
            if (!validateInputText("mt", "mô tả")) { return false; };
            if (!validateInputText("dk", "điều kiện")) { return false; };
            if (!validateInputText("time", "thời gian")) { return false; };
            if (!validateInputText("HinhAnh", "hình ảnh")) { return false; };

            // Gọi hành động thêm ở đây
            $("#myForm").attr("action", "/XuLy/Addnew");
            $("#myForm").submit();
        });
    });
    $(document).ready(function () {
        $('.delete-button').click(function (e) {
            e.preventDefault();
            var itemId = $(this).data("id");
            $("#selectedItemId").val(itemId);
            $('#confirmDeleteModal').modal('show');
        });
    });
    $(document).ready(function () {
        $('.huy-button').click(function (e) {
            $('#confirmDeleteModal').modal('hide');
            $('#addMovieModal').modal('hide');
        });
    });
    $(document).ready(function () {
        setTimeout(function () {
            $('#messageContainer').fadeOut();
        }, 3000);
    });



</script>







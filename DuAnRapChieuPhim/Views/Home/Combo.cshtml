@{
    ViewBag.Title = "Combo";
    Layout = "~/Views/Shared/Layout.cshtml";
    var nguoidung = Session["KH"] as DuAnRapChieuPhim.Models.ThongTinCaNhan;
    int diem = ViewBag.khach;
    string hang = nguoidung.Hang;
    var tongtien = ViewBag.TienGhe;
    var tienghe = ViewBag.TienGhe;
    string ten = Session["Ten"] as string;
}
@model IEnumerable<DuAnRapChieuPhim.Models.Combo>

<style>
    /* CSS cho form */
    .form-container {
        background-color: black; /* Màu nền */
        color: white; /* Màu chữ */
        overflow: hidden; /* Ẩn phần bị lõm */
        position: relative; /* Để sử dụng box-shadow */
        padding: 20px;
        box-sizing: border-box;
        margin: 20px auto;
        width: 1120px;
        display: flex; /* Sử dụng flexbox */
        justify-content: space-between; /* Căn giữa các cột */
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1); /* Đổ bóng */
        overflow: hidden; /* Ẩn phần bị lõm */
    }

    .form-column p {
        text-align: left;
        font-weight: bold;
    }
    /* CSS cho cột trong form */
    .form-column {
        flex: 1; /* Cột linh hoạt */
        padding: 0 10px;
    }

    .content {
        position: relative;
        overflow: hidden;
        padding: 15px 0;
        box-sizing: border-box;
    }

        .content::before {
            content: "";
            display: block;
            background: linear-gradient(90deg, #FFFFFF 30%, transparent 30%, transparent 75%, #FFFFFF 75%);
            background-size: 40px;
            position: absolute;
            top: -1000px;
            left: -50px;
            bottom: -1000px;
            right: -50px;
            transform: rotate(45deg);
        }




    /* CSS cho button trái */
    .left-button, .right-button {
        background-color: red; /* Màu nền */
        color: white; /* Màu chữ */
        border: none;
        padding: 10px; /* Kích thước nút */
        border-radius: 8px; /* Góc cong */
        cursor: pointer;
        transition: background-color 0.3s;
        width: 100px; /* Độ dài */
        height: 150px;
    }

        /* Hover state cho button */
        .left-button:hover, .right-button:hover {
            background-color: darkblue; /* Màu nền khi hover */
        }
    /* Clearfix để ngăn chặn form bị tràn ra ngoài */
    .clearfix::after {
        content: "";
        clear: both;
        display: table;
    }
    /* End Sass Config */
    .qty {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        text-align: center;
    }

    label {
        flex: 1 0 100%;
    }

    input {
        width: 7rem;
        height: 3rem;
        font-size: 1.3rem;
        text-align: center;
        border: 1px solid #000000;
        color: #000; /* Màu chữ đen */
    }

    .button1 {
        width: 3rem;
        height: 3rem;
        color: #fff;
        font-size: 2rem;
        background: #000000;
    }

    button.qtyminus {
        margin-right: 0.3rem;
    }

    button.qtyplus {
        margin-left: 0.3rem;
    }
</style>

<div class="container" style="margin-top: 6rem;">
    <h2>Vui lòng lựa chọn combo</h2>
    <div class="row">
        @foreach (var combo in Model)
        {
            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="row no-gutters">
                        <div class="col-md-4">
                            <img src="~/IMG/@combo.HinhAnh" class="card-img" alt="Combo Image">
                        </div>
                        <div class="col-md-8">
                            <div class="card-body">
                                <h5 class="card-title" style="color:black">@combo.TenCB</h5>
                                <p class="card-text">@combo.MoTa</p>
                                <p style="color:black" class="text-right">Giá: @String.Format("{0:#,##0} VND", combo.Gia)</p>
                                <form action="">
                                    <p class="qty">
                                        <label for="qty" style="color:black">Quantity:</label>
                                        <button class="button1 qtyminus" aria-hidden="true" onclick="decreaseQuantity('@combo.MaCB', event)">&minus;</button>
                                        <input type="number" name="qty" id="qty-@combo.MaCB" data-giatien="@combo.Gia" min="0" max="10" step="1" value="0" style="color:black">
                                        <button class="button1 qtyplus" aria-hidden="true" onclick="increaseQuantity('@combo.MaCB', event)">&plus;</button>
                                    </p>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
                <div class="content" style="margin-top:50px">
                    <form class="form-container">
                        <button type="button" class="button left-button" onclick="goBack()">&larr; Back</button>
                        <div class="form-column">
                            <img src="~/IMG/@Session["Hinh"]" alt="Poster phim" style="width: 130px; height: 170px;">   
                        </div>
                        <div class="form-column">
                            
                            <p>Ngôn ngữ: @ViewBag.LichChieu.NgonNgu</p>
                            <p>Giờ chiếu: @ViewBag.LichChieu.GioChieu</p>
                            <p>Giờ kết thúc: @ViewBag.LichChieu.GioKetThuc</p>
                        </div>
                        <div class="form-column">
                            <p>Phòng chiếu: @ViewBag.LichChieu.Phong</p>
                            <p>Tên phim: @ten</p>
                            <p>Ngày chiếu: @ViewBag.LichChieu.NgayChieu.ToShortDateString()</p>
                        </div>
                        <div class="form-column">
                            <div>
                                <p id="ss">
                                    Tiền phim : @tongtien.ToString("C0") <!-- Định dạng số tiền theo tiền tệ (VND) và không có phần thập phân -->
                                </p>

                                <p id="comboPrice">
                                    Tiền Combo : 0 ₫
                                </p>
                                <p id="total">
                                    Tổng tiền : @tongtien.ToString("C0")
                                </p>
                            </div>
                        </div>
                        <button type="button" class="button right-button" onclick="sendDataToServer()">&rarr; Next </button>

                    </form>
                </div>

                <script>
        var selectedCombos = [];
function sendDataToServer() {
// Serialize dữ liệu thành một chuỗi JSON
var serializedData = JSON.stringify(selectedCombos);

// Tạo URL với dữ liệu trên query string
    var url = '@Url.Action("TrangThanhToan", "Home")' + '?selectedCombos=' + encodeURIComponent(serializedData) ;

// Chuyển hướng đến URL được tạo
window.location.href = url;
}


function updateTotalPrice() {
    // Lấy giá trị nhập vào từ ô input diemThuong
    var diemThuongValue = parseInt(document.getElementById("diemThuong").value);

    // Lấy giá trị giảm giá dựa trên hạng thành viên


    // Tính toán giảm giá dựa trên điểm thưởng và hạng thành viên
    var discount = diemThuongValue * 1000 ;

    // Cập nhật lại giá trị của totalPrice
    var newTotalPrice = originalTotalPrice  - discount;
    var formattedPrice = newTotalPrice.toLocaleString('vi-VN');
    // Hiển thị giá trị mới của totalPrice
    document.getElementById("totalPrice").innerText = formattedPrice + " VND";
}

function increaseQuantity(comboId, event) {
    event.preventDefault();

    var qtyInput = document.getElementById('qty-' + comboId);
    var currentQty = parseInt(qtyInput.value, 10);


    var selectedComboIndex = selectedCombos.findIndex(c => c.MaCB === comboId);

    if (currentQty >= 0) {
        // Nếu có trong danh sách, cập nhật số lượng
        if (selectedComboIndex !== -1) {
            selectedCombos[selectedComboIndex].SoLuong = currentQty+1;
        } else {
            // Nếu chưa có, thêm mới vào danh sách
            selectedCombos.push({ MaCB: comboId, SoLuong: currentQty + 1 });
        }
    } else {
        // Nếu số lượng là 0, loại bỏ combo khỏi danh sách
        if (selectedComboIndex !== -1) {
            selectedCombos.splice(selectedComboIndex, 1);
        }
    }
    for (var combo of selectedCombos) {
        console.log("Mã: " + combo.MaCB + ", Số lượng: " + combo.SoLuong);
    }

    if (currentQty < 10) {
        qtyInput.value = currentQty + 1;
        updateComboPrice(comboId, currentQty + 1);
    }
}

function decreaseQuantity(comboId, event) {
    event.preventDefault();

    var qtyInput = document.getElementById('qty-' + comboId);
    var currentQty = parseInt(qtyInput.value, 10);
    var selectedComboIndex = selectedCombos.findIndex(c => c.MaCB === comboId);

    if (currentQty > 1) {
        // Nếu có trong danh sách, cập nhật số lượng
        if (selectedComboIndex !== -1) {
            selectedCombos[selectedComboIndex].SoLuong = currentQty-1;
        } else {
            // Nếu chưa có, thêm mới vào danh sách
            selectedCombos.push({ MaCB: comboId, SoLuong: currentQty-1 });
        }
    } else {
        // Nếu số lượng là 0, loại bỏ combo khỏi danh sách
        if (selectedComboIndex !== -1) {
            selectedCombos.splice(selectedComboIndex, 1);
        }
    }
    for (var combo of selectedCombos) {
        console.log("Mã: " + combo.MaCB + ", Số lượng: " + combo.SoLuong);
    }
    if (currentQty > 0) {
        qtyInput.value = currentQty - 1;
        updateComboPricedown(comboId, currentQty - 1);
    }
}
window.totalComboPrice = 0;
function updateComboPrice(comboId) {
    // Lấy giá combo từ data-giatien
    var comboPrice = parseFloat(document.getElementById('qty-' + comboId).getAttribute('data-giatien'));

    window.totalComboPrice += comboPrice;
    var tong = window.totalComboPrice + @tongtien;

    var formattedTotalComboPrice = new Intl.NumberFormat("vi-VN").format(window.totalComboPrice);
    var formattedTotalPrice = new Intl.NumberFormat("vi-VN").format(tong);
    document.getElementById("comboPrice").innerHTML = "Tiền Combo : " + formattedTotalComboPrice + " ₫";
    document.getElementById("total").innerHTML = "Tổng tiền : " +formattedTotalPrice + " ₫";
}
function updateComboPricedown(comboId) {
     var comboPrice = parseFloat(document.getElementById('qty-' + comboId).getAttribute('data-giatien'));

    window.totalComboPrice -= comboPrice;
    var tong = window.totalComboPrice + @tongtien;

    // Hiển thị tổng giá tiền combo
    var formattedTotalComboPrice = new Intl.NumberFormat("vi-VN").format(window.totalComboPrice);
    var formattedTotalPrice = new Intl.NumberFormat("vi-VN").format(tong);
    document.getElementById("comboPrice").innerHTML = "Tiền Combo : " + formattedTotalComboPrice + " ₫";
    document.getElementById("total").innerHTML = "Tổng tiền : " + formattedTotalPrice + " ₫";
}
        function goBack() {
            window.history.back();
        }
                </script>

</div>
